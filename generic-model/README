                              Generic Model 1.0

Technologies langagieres interactives / Interactive Language Technologies
Technologies de l'information et des communications /
   Information and Communications Technologies
Conseil national de recherches Canada / National Research Council Canada
Copyright 2012, Sa Majeste la Reine du Chef du Canada
Copyright 2012, Her Majesty in Right of Canada

Distributed under specific licensing terms.  Please refer to your signed
license agreement for details.

                          Portage Generic Model 1.0

If you have licensed the Portage generic models, you can install these models
in the generic-model directory.

The Portage Generic Model DVD contains trained English and French language
models (LM) and English->French and French->English translation models (TM),
which may be used in conjunction with your own in-domain language and
translation models in a tuned Portage system. The generic models were trained on
a large general language corpus and then pruned, keeping the most relevant data
while shrinking the models to a usable size.

Using the generic models in conjunction with your in-domain models can
significantly improve translation quality of new text, especially for small
in-domain corpora: the generic models will help the system handle the general
constructs of the language, while the in-domain material will provide the
domain-specific vocabulary and contructions.

We thank Library and Archives Canada for providing the data on which the
Portage models for Generic Model 1.0 were trained.

                   Contents of the generic-model directory

   lm/      English and French Language Models
      generic1.0_en.binlm.gz
      	    English LM in binlm format for training a system
      generic1.0_en.tplm/
      	    English LM in TPLM format, used for translation in an 
      	    French->English system using the PortageLive translation server
      generic1.0_fr.binlm.gz
      	    French LM in binlm format for training a system
      generic1.0_fr.tplm/
      	    French LM in TPLM format, used for translation in an 
      	    English->French system using the PortageLive translation server
   tm/      English->French and French->English Translation Models
      cpt.generic1.0.en2fr.gz
            TM for training English->French translation system
      cpt.generic1.0.fr2en.gz
            TM for training French->English translation system
   INSTALL  installation instructions for the Generic Model
   README   this file

                               Getting Started

Please refer to the INSTALL file in this directory for installation instructions.

Once installed, the models of the Portage Generic Model are very easy to use in
conjunction with your in-domain models in the Portage framework.

For the purpose of this description, we assume the generic model is installed in
in the standard location: $PORTAGE/generic-model 

You can use the language models in the lm directory in standard (log-linear)
combination with your own in-domain LMs or in linear combination using a MixLM.
To do so, prior to training your Portage system edit your framework
Makefile.params file as follows.

To train a Portage system using the generic LM in standard combination with
your in-domain LMs, add the file path of the binlm format target language
generic model LM to the LM_PRETRAINED_TGT_LMS variable definition. For example,
for an English->French system, this would be:

LM_PRETRAINED_TGT_LMS ?= ${PORTAGE}/generic-model/lm/generic1.0_fr.binlm.gz

To train a Portage system using the generic LM in linear combination with your
in-domain LMs in a MixLM, add the file path of the binlm format target language
generic model LM to the MIXLM_PRETRAINED_TGT_LMS variable definition. For
example, for an English->French system, this would be:

MIXLM_PRETRAINED_TGT_LMS ?= ${PORTAGE}/generic-model/lm/generic1.0_fr.binlm.gz

You can use the translation models (CPTs) in the tm directory in standard (log-
linear) combination with your own in-domain CPTs or in a linear combination
using a MixTM CPT. To do so, prior to training your Portage system, edit
your framework Makefile.params file as follows.

To train a Portage system using the generic TM in standard combination with your
in-domain TMs, add the file path of the en2fr generic model CPT (for an English
->French system) or fr2en generic model CPT (for a French->English system) to
the TM_PRETRAINED_TMS variable definition. For example, for an English->French
system, this would be:

TM_PRETRAINED_TMS ?= ${PORTAGE}/generic-model/tm/cpt.generic1.0.en2fr.gz

To train a Portage system using the generic TM in linear combination with your
in-domain TMs in a MixTM, add the file path of the en2fr generic model CPT (for
an English->French system) or fr2en generic model CPT (for a French->English
system) to the MIXTM_PRETRAINED_TMS variable definition. For example, for an
English->French system, this would be:

MIXTM_PRETRAINED_TMS ?= ${PORTAGE}/generic-model/tm/cpt.generic1.0.en2fr.gz

The framework will automatically create symbolic links to the necessary generic
model files within the framework structure, including the LM in TPLM format for
PortageLive, and the source language LM if needed for training a MixLM.

In all cases, do not include the generic model name in the TRAIN_LM, MIXLM,
TRAIN_TM, or MIXTM definitions in the Makefile.params file.

Note: All four PRETRAINED variables accept multiple file paths, so you may add
your own pre-trained models as well.

Our recommended practice is to use both the generic model LM and generic model
TM, both in linear combination with your in-domain models. Our experience is
that the linear mixtures (MixLM and MixTM) yield a system with better
translation quality than the standard log-linear combination. If you have a
situation where translation time is an issue, say for single-sentence-at-a-time
translation within a short time window, we recommend that you experiment with
trying out and benchmarking various combinations of standard and mixture models
to see what works best for you. In some situations the standard models may
result in quicker translation.


                  Simplest use: one corpus plus generic models

If you want to use the generic models in a MixLM and MixTM combination with a
single, in-domain corpus, here is what you would do in Makefile.params.  We'll
assume your LM training corpus is called lm-train, and your TM training corpus
is called tm-train, as is the default in the framework.

1. MixLM-related variables

   a. Comment out the line defining TRAIN_LM, since your in-domain corpus will
      be in the MixLM, not as a regular LM:

      #TRAIN_LM ?= lm-train

   b. Uncomment and change the line defining MIXLM to specify only your corpus:

      MIXLM ?= lm-train

   c. Uncomment the line defining MIXLM_PRETRAINED_TGT_LMS:

      MIXLM_PRETRAINED_TGT_LMS ?= ${PORTAGE}/generic-model/lm/generic1.0_fr.binlm.gz

   d. TRAIN_TC now needs to be explicitly defined, because its default is to
      copy TRAIN_LM, which is no longer defined.  Uncomment and edit the line
      defining it:

      TRAIN_TC ?= lm-train

2. MixTM-related variables

   a. As for LMs, turn off the regular TM training by commenting out the
      definition of TRAIN_TM:

      #TRAIN_TM ?= tm-train

   b. Add your TM training corpus to MIXTM instead:

      MIXTM ?= tm-train

   c. Uncomment the line defining MIXTM_PRETRAINED_TMS:

      MIXTM_PRETRAINED_TMS ?= ${PORTAGE}/generic-model/tm/cpt.generic1.0.en2fr.gz

   d. Leave MIXTM_TRAIN_MIX undefined (don't uncomment its line) since its
      default value is appropriate:

      #MIXTM_TRAIN_MIX ?= subtm1


