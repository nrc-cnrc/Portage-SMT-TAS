                               PortageII 2.2
 
Traitement multilingue de textes / Multilingual Text Processing
Technologies de l'information et des communications /
   Information and Communications Technologies
Conseil national de recherches Canada / National Research Council Canada
Copyright 2004-2014, Sa Majeste la Reine du Chef du Canada
Copyright 2004-2014, Her Majesty in Right of Canada

Distributed under specific licensing terms.  Please refer to your signed
license agreement for details.

See NOTICE for the Copyright notices of 3rd party libraries.


                             Brief Description

Portage is a project to explore new techniques in Statistical Machine
Translation (SMT), and to develop state-of-the-art SMT technology that can be
used commercially, as well as to support other projects at NRC and elsewhere.

Various SMT systems were developed under the Portage project.  PORTAGEshared
was first released to Canadian universities to build and train a community of
users.  Commercial releases of PORTAGEshared 1.1 to 1.3 were made, followed by
Portage 1.4.

PortageII marks a leap forward in NRC's SMT technology.  With version 1.0, we
brought in significant improvements to translation engine itself that result in
better translations, and contributed to our success at the NIST Open Machine
Translation 2012 Evaluation (OpenMT12).  With version 2.0, we are adding two
important features to help translators: the transfer of markup tags from the
source sentence to the machine translation output, as well as handling of the
increasingly common xliff file format.

PortageII 2.x includes a complete suite of software tools required for
phrase-based statistical machine translation, including:
 - preprocessing of French, English, Spanish, Danish (tokenization,
   detokenization, lowercasing, aligning) and Chinese (handling of dates and
   numbers);
 - training lexical translation models (IBM models 1 and 2, HMM) from aligned
   corpora;
 - training phrase-based translation models from aligned corpora and lexical
   models;
 - training lexicalized distortion models, and their hierarchical variant;
 - using language models in text and binary format for various purposes;
 - filtering language and translation models to retain only information needed
   for a particular text to be translated;
 - adapting language and translation models to reflect the characteristics of
   the data currently being translated;
 - decoding (doing the actual translation, producing n-best lists or lattices);
 - rescoring (choosing the best hypothesis from an n-best list) using sources
   of information that are external to the decoder; a collection of rescoring
   features;
 - optimizing weights, both for decoding and for rescoring, using a variety of
   tuning algorithms, including N-Best MERT, Lattice and N-Best MIRA and a few
   more;
 - truecasing (restoring upper case letters in the output of the translation);
 - evaluation using BLEU, WER or PER.
 - a tightly packed representation of various model files (LMs, TMs, (H)LDMs,
   suffix arrays) for instant loading and fast access via memory-mapped IO;
 - a confidence estimation module to compute a per-sentence quality
   prediction/estimation of the translations produced by Portage;
 - an API to incorporate the decoder into other applications using SOAP or cgi;
   a web-ready demo;
 - PortageLive -- tools to setup a runtime SMT server using Portage, accessible
   via a SOAP API, via CGI scripts or a command line interface;
 - Code to handle translation projects in the TMX and XLIFF format, with
   optional transfer of formatting tags from the source text to the output.
 - an experimental framework -- a collection of tools to automate running all
   the components required to train a full machine translation system;
 - generic en->fr and fr->en models to supplement in-domain training corpora,
   for improved translation quality, especially for smaller corpora;
 - lots of general utility code needed for the above.


                         Contents of this directory

   doc/         documentation
   src/         source code (if included in your distribution)
   framework/   sample experimental framework
   bin/         executable code (if included in your distribution)
   lib/         run-time libraries (if included in your distribution)
   logs/        place-holder for runtime logs
   test-suite/  various test suites
   PortageLive/ files needed to setup a runtime translation server
   third-party/ Non-NRC software distributed with PortageII for convenience
   README       this file
   INSTALL      installation instructions
   RELEASES     release history
   LICENCE      notes about your PortageII licence agreement
   NOTICE       third party Copyright notices
   SETUP.bash   config file for bash users
   SETUP.tcsh   config file for tcsh users
   *.patch      patches for upgrading a previous installation in place
                (if included in your distribution)


                              Getting started

The framework subdirectory provides a template experimental framework.  This is
intended as a reasonable experimental starting point.  We recommend you use
this framework as your starting point for real experiments.  A tutorial is
included showing how to run a toy experiment with this framework: tutorial.pdf.
Even if you used Portage 1.4 or earlier before, we recommend you read through
this document, as it highlight the currently recommended procedures for using
PortageII.  Please do not use our old toy example as a starting point, start
from the framework instead.

For further documentation, look at the contents of doc/.


                               Contacting us

If you have any question about PortageII, be it technical, legal or
otherwise, you can contact us by e-mail at PORTAGEshared@nrc-cnrc.gc.ca.


                       PortageII Users mailing list

We have created a mailing list for PortageII users, where questions of general
interest can be asked and answered publicly.  If you would like to be added to
this list, please e-mail PORTAGEshared@nrc-cnrc.gc.ca.

