# $Id$
# @file Makefile.user-conf
# @brief User-configurable building parameters for PORTAGEshared
# @author Eric Joanis
#
# Technologies langagieres interactives / Interactive Language Technologies
# Inst. de technologie de l'information / Institute for Information Technology 
# Conseil national de recherches Canada / National Research Council Canada 
# Copyright 2008, Sa Majeste la Reine du Chef du Canada /
# Copyright 2008, Her Majesty in Right of Canada 


# This file contains all the user-configurable variables used to build
# PORTAGEshared.  It needs to be modified to indicate where various packages
# are located and, in the case of optinal dependencies, whether their use is
# desired.  All variables in this file can also be exported as environment
# variables or specified on the make command line, e.g., to override some
# values temporarily.

# If you haven't already done so, you should set the PORTAGE variable in
# SETUP.bash/tcsh and source the appropriate file for your shell before trying
# to compile or use PORTAGEshared.

# AT NRC: lines with this commend are automatically removed when creating the
# AT NRC: PORTAGEshared CD.  If you commit changes to this file, make sure you
# AT NRC: mark NRC-specific lines with this comment, while leaving untouched
# AT NRC: the (sometimes redundant) lines that are intended as defaults on the]
# AT NRC: official CD.



# =============================================================================
# REQUIRED PACKAGES - you need to install these dependencies and adjust the
# following variables appropriately to build PORTAGEshared.

# ------------------------------------
# Variable:        BOOST_ROOT
# Possible values: Full path to the directory where boost is installed.
#                  $BOOST_ROOT/lib will be added to the library search path
#                  for linking, and $BOOST_ROOT/include/boost-<version>
#                  will be added to the include search path for compiling.
# Notes:           Uncomment and edit this line to tell the compiler where
#                  to find boost if it is not in a standard location.

#BOOST_ROOT=/full/path/to/boost




# =============================================================================
# OPTIONAL PACKAGES - installing these dependencies enables some optional
# functionalities in PORTAGEshared.

# ------------------------------------
# Variable:        ICU
# Possible values: "NONE": Do not use ICU, or unicode-compliant casemapping.
#                  Empty or undefined: Use ICU, which is installed in a
#                  standard location.
#                  /full/path/to/icu: Use ICU, looking for its include files in
#                  $(ICU)/include, and its libraries in $(ICU)/lib.  In this
#                  case, you will also need to make sure the environment
#                  variable $LD_LIBRARY_PATH includes $(ICU)/lib. 
# Notes:           Comment out the ICU?=NONE line below to enable Unicode-
#                  compliant casemapping in PORTAGEshared.  Requires ICU.  
#                  Uncomment and edit the next line if needed.

ICU?=NONE
#ICU=$(PORTAGE)
ICU=$(PORTAGE)# AT NRC

# ------------------------------------
# Variable:        CXXTEST
# Possible values: Specifies where CxxTest is installed.
# Notes:           "make test" will fail unless CxxTest in installed, but
#                  compilation of PORTAGEshared will not be affected.
#                  Set this value so that $(CXXTEST)/bin/cxxtestgen.pl and
#                  $(CXXTEST)/include/cxxtest/*.h exist.

CXXTEST?=NONE
#CXXTEST=$(PORTAGE)
CXXTEST=$(PORTAGE)# AT NRC

# ------------------------------------
# Variable:        PORTAGE_OPENMP
# Possible values: specifies the compiler flag to enable OpenMP 
#                  (requires g++ 4.2 or more recent)
# Notes:           Uncomment this line to enable multi-threading, currently
#                  only used by rescore_train.  (Other programs are
#                  parallelized via our various *-parallel.sh scripts).

#PORTAGE_OPENMP?=-fopenmp
PORTAGE_OPENMP=-fopenmp # AT NRC

# ------------------------------------
# Variable:        LOG4CXX
# Possible values: "NONE" disables logging.
#                  Any other value or undefined enables logging.
#                  Empty or undefined: enable logging, assuming log4cxx is
#                  installed in a standard location.
#                  /full/path/to/log4cxx: enable logging, looking for log4cxx
#                  includes in $LOG4CXX/include/log4cxx and log4cxx libraries
#                  in $LOG4CXX/lib.
# Notes:           Comment out this line to enable logging.  Requires log4cxx.
#                  Uncomment and edit the next line if needed.

LOG4CXX?=NONE
#LOG4CXX=$(PORTAGE)
LOG4CXX=$(PORTAGE)# AT NRC

# ------------------------------------
# Variable:        PORTAGE_NO_CTAGS
# Possible values: defined to any non-blank value turns off the use of ctags
# Notes:           Uncomment this line if you don't have the ctags program or
#                  if you don't use vi or a related editor.  Equivalently, you
#                  can export/setenv PORTAGE_NO_CTAGS to 1 in your .<shell>rc
#                  file to disable the use of etags.

#PORTAGE_NO_CTAGS?=1

# ------------------------------------
# Variable:        PORTAGE_NO_ETAGS
# Possible values: defined to any non-blank value turns off the use of etags
# Notes:           Uncomment this line if you don't have the etags program or
#                  if you don't use emacs or a related editor.  Equivalently,
#                  you can export/setenv PORTAGE_NO_ETAGS to 1 in your
#                  .<shell>rc file to disable the use of etags.

#PORTAGE_NO_ETAGS?=1

# ------------------------------------
# Variable:        MYLATEX
# Possible values: the command line for invoking latex, or "NONE" to disable
#                  the compilation of documents
# Notes:           Uncomment the "MYLATEX = NONE" line if you don't have latex.

MYLATEX ?= latex -interaction=batchmode
#MYLATEX = NONE


