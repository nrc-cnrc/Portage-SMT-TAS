#!/bin/bash
#
# @file postprocess_plugin
# @brief Default post-processor plugin
#
# @author Michel Simard
#
# COMMENTS:
#
# Technologies langagieres interactives / Interactive Language Technologies
# Inst. de technologie de l'information / Institute for Information Technology
# Conseil national de recherches Canada / National Research Council Canada
# Copyright 2010, Conseil national de recherches du Canada /
# Copyright 2010, National Research Council of Canada

## 
## Usage: postprocess_plugin TGT_LANG < in > out
## 
## Default postprocessing plugin: to be called after detokenization.
##

# ######################################################## #
#               Quick configuration options                #
# ######################################################## #
# Some behaviours can be turned on and off here, although you can also do
# more advanced configuration by modifying the rest of the script below.

# Uncomment to insert non-breaking spaces where required in French output
# (inside quotes, before currency symbols, etc.: see add-fr-nbsp.pl -h for full
# details.
# Note: has no effect unless your target language is French
ADD_FR_NBSP=1

# ######################################################## #
#            End of Quick configuration options            #
# ######################################################## #

if [[ $1 = -help || $1 = -h ]]; then
    cat $0 | grep "^##" | cut -c4-
    exit 1
fi

[[ $# = 0 ]] && echo "Missing language code argument" >&2 && exit 1
TARGET_LANGUAGE=$1; shift

# Suggestion: for an English->French system, you could use fix-en-fr-numbers.pl
# to patch numbers, reformatting them from English to French style.
# Uncomment the following line to activate:
#fix-en-fr-numbers.pl |

# Optionally insert non-breaking spaces where needed in French.
if [[ $ADD_FR_NBSP && $TARGET_LANGUAGE = fr ]]; then
   add-fr-nbsp.pl
else
   cat
fi |

# Suggestion: make some hyphens non-breaking (warning: code not tag safe)
# Uncomment the following block of lines to activate, and modify to suit your
# needs; you can leave lines that don't apply to you in comments.
#perl -pe 'BEGIN{ use encoding "UTF-8"; use utf8;
#             # Choose only one of the following non-break hyphen definitions:
#             $nbhy = "\x{2011}";   # This is the unicode non-break hyphen
#             $nbhy = "\x1E";       # This is the old MS Word non-break hyphen
#             $nbhy = "­";          # \xAD, the soft-hyphen, also used by MS Word as non-break hyphen
#             $nbhy = "\\_";        # RTF non-break hyphen
#             $nbhy = "<ph>\_</ph>";# Trados might like this better???
#          }
#          # Make the hyphen in codes like A-2 non-breakable
#          s/\b([a-zA-Z0-9])-([a-zA-Z0-9])\b/$1$nbhy$2/g;
#          # Replace the soft hyphen (\xAD or alt-0173) by <ph>\_</ph> for Trados
#          s/­/<ph>\_</ph>/g; # Warning: there is a literal \xAD in utf8 here.
#         ' |

# Suggestion: To convert sequences of tokens within <hashtag>...</hashtag> into
# a proper, twitter style hashtag. Initial source-text markup is performed in
# tokenize_plugin, and tags are transfered via Portage's tag-transfer mechanism
# (translate.pl -xtags).
#xml2hashtag.pl |

# Default is to just copy the input to the output.
cat
