#!/bin/bash
#
# @file preprocess_plugin
# @brief Default Preprocessing plugin
#
# @author Michel Simard
#
# COMMENTS:
#
# Technologies langagieres interactives / Interactive Language Technologies
# Inst. de technologie de l'information / Institute for Information Technology
# Conseil national de recherches Canada / National Research Council Canada
# Copyright 2010, Conseil national de recherches du Canada /
# Copyright 2010, National Research Council of Canada

## 
## Usage: preprocess_plugin SRC_LANG < in > out
## 
## Default preprocessing plugin, to be called prior to tokenization
##

if [[ $1 = -help || $1 = -h ]]; then
    cat $0 | grep "^##" | cut -c4-
    exit 1
fi

[[ $# = 0 ]] && echo "Missing language code argument" >&2 && exit 1
SOURCE_LANGUAGE=$1; shift

# The following does minimalist preprocessing: remove the UTF8 bit-order mark,
# and convert newlines from the DOS to the Linux standard.
#ridbom.sh | crlf2lf.sh

# The following does more detailed preprocessing: comment out individual lines
# you don't need; uncomment individual lines you do need:
perl -ple '
   # work in utf-8, both this script and its input/output
   BEGIN{use encoding "UTF-8"; use utf8};
   # Convert various non-breaking hyphen encodings to -: \xAD and \x1E for MS
   # Word, \x2011 for Unicode.  Warning: for html documents, \xAD should be
   # stripped, rather than converted to -.
   s/[\x1EÂ­\x{2011}]/-/g; # warning, the \xAD is literal here, in utf8
   # Strip out the MS Word discretional hyphen, \x1F
   s/\x1F//g;
   # strip out XML/HTML markup
#   s/\s*(<[^A-Z>][^>]*>\s*)+\s*/ /g;
   # Strip the BOM out
   s/\x{FEFF}//g;
   # replace remaining control characters by spaces.
   s/[\x01-\x09\x0B\x0C\x0E-\x1F\x7F\x{2060}\x{2028}\x{2029}]/ /g;
   # equivalent to crlf2lf.sh: convert DOS newlines to Linux ones
   s/\x0D$//;
   # Collapse multiple spaces to a single space
   s/\s+/ /g;
   # If ||| appears stand-alone in text, that causes problems with Portage
   s/(^| )\|\|\|(?= |$)/ ___|||___/g;
   # Remove leading whitespace
   s/^\s+//g;
   # Remove trailing whitespace
   s/\s+$//g;
'


