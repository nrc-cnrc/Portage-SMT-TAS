Technologies langagieres interactives / Interactive Language Technologies
Institut de technologie de l'information / Institute for Information Technology
Conseil national de recherches Canada / National Research Council Canada
Copyright 2004-2011, Sa Majeste la Reine du Chef du Canada
Copyright 2004-2011, Her Majesty in Right of Canada

Distributed under specific licensing terms.  Please refer to your signed
license agreement for details.


                                PortageLive
                      Portage runtine software layout

This directory includes scripts that can help you reproduce the structure we
use to package the Portage software for PortageLive virtual appliances.
Detailed instructions are in the PortageLive Manual part of the Portage 1.4
User Manual.

In this directory:

Make sure you have compiled and installed Portage 1.4 already, and set the
path properly by calling $PORTAGE/SETUP.bash.

Run
   make
or
   make DO_EXTERNAL_LIBS=1
to create the rpm.build.root hierarchy.  The files placed in that directory
reproduce the location where files are to be installed on the translation
server, as is normally done with RPMs.  The second variant tries to include all
relevant shared libraries in the result.

Then, either copy the files manually to your translation server, if you have
just one physical server, or build the RPM by running ../scripts/make-rpm.sh if
you are using virtual appliances.

Note (1): the scripts work for us, but rely on details of how the OS is
installed, among other things.  You should expect to have to adjust the
procedure for your own environment.

Note (2): if your PortageLive machine (virtual or physical) has a different
operating system version, or a different Linux distro, than the machine where
Portage was compiled, you might have some difficulties with shared libraries
(`.so` files).  If that is the case, you can try defining DO_EXTERNAL_LIBS=1 in
the Makefile, which will bundle some .so files along with Portage.  Or else try
following this procedure on a machine that is more like your runtime
translation server(s).

Note (3): even with the same OS, you may need to do some work to get the ICU
.so files installed correctly.  DO_EXTERNAL_LIBS=1 might fix that (it does on
our systems), but if not, run "ldd `which canoe`" and make a copy of the .so
files related to ICU into rpm.build.root/opt/Portage/lib.  Do the same for any
other .so files that the system can't find on your translation server.
On the translation server, running the command
   ldd /opt/Portage/bin/* | grep "not found"
will tell you which .so files you need to install along with PortageLive.
