<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="wsdl-viewer.xsl"?>
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://__REPLACE_THIS_WITH_YOUR_IP__/PortageLiveAPI.wsdl" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" name="PortageLiveService" targetNamespace="http://__REPLACE_THIS_WITH_YOUR_IP__/PortageLiveAPI.wsdl">
  <!-- Understanding WSDL: http://msdn.microsoft.com/en-us/library/ms996486.aspx -->
  <!-- http://www.w3.org/TR/wsdl20 -->
  <documentation>
          File: PortageLiveAPI.wsdl
&lt;br/>  Brief: Definition of the API to the PortageII SMT software suite.
&lt;br/>  Authors: Patrick Paul, Eric Joanis and Samuel Larkin
&lt;br/>
&lt;br/>  Technologies langagières interactives / Interactive Language Technologies
&lt;br/>  Technologies de l'information et des communications / Information and Communications Technologies
&lt;br/>  Conseil national de recherches Canada / National Research Council Canada
&lt;br/>  Copyright 2009 - 2013, Sa Majesté la Reine du Chef du Canada /
            Copyright 2009 - 2013, Her Majesty in Right of Canada
  </documentation>
  <!-- ============================================================
                         M E S S A G E S
============================================================ -->
  <message name="primeModelsRequest">
    <part name="context" type="xsd:string"/>
    <part name="PrimeMode" type="xsd:string"/>
  </message>
  <message name="getAllContextsRequest">
    <part name="verbose" type="xsd:boolean"/>
  </message>
  <message name="getTranslationRequest">
    <part name="srcString" type="xsd:string"/>
  </message>
  <message name="getTranslationResponse">
    <part name="Result" type="xsd:string"/>
  </message>
  <message name="translationToken">
    <part name="token" type="xsd:string"/>
  </message>
  <message name="getTranslation2Request">
    <part name="srcString" type="xsd:string"/>
    <part name="context" type="xsd:string"/>
  </message>
  <message name="translateXMLCERequest">
    <part name="XMLContentsBase64" type="xsd:string"/>
    <part name="XMLFilename" type="xsd:string"/>
    <part name="context" type="xsd:string"/>
    <part name="CETreshold" type="xsd:decimal"/>
    <part name="xtags" type="xsd:boolean"/>
  </message>
  <!-- ============================================================
                      P O R T   T Y P E S
============================================================ -->
  <portType name="PortageLive_Interface">
    <operation name="primeModels">
      <documentation>
         For a given context, load its models in memory according to PrimeMode.
&lt;br/> Legal value for PrimeMode are "partial" and "full".
&lt;br/> Recommended use: call this method with "partial" before the first time
         you use a given context, or after it's been left unused for a long
         time.  This will normally result in faster response times afterwards.
&lt;p>
         Priming is accomplished by calling the prime.sh script installed with
         the context on the server.  The default prime.sh uses PrimeMode to
         partially (partial) or fully (full) load the models in memory.  The
         actual behaviour of this function can be customized on the server side
         if desired.
&lt;/p>&lt;p>
         Throws a SoapFault exception with fault code "PortageContext" if the
         context is not valid.
&lt;br/> Throws a SoapFault exception with fault code "PortagePrimeError" if the
         prime.sh script failed.
&lt;br/> Throws a SoapFault exception with fault code "PortageNoPrimeScript" if the
         context exists but doesn't have a prime.sh script.
&lt;br/> Throws a SoapFault exception in case of a protocol or connection error.
&lt;/p>
      </documentation>
      <input message="tns:primeModelsRequest"/>
      <output message="tns:getTranslationResponse"/>
    </operation>
    <operation name="getAllContexts">
      <documentation>
         Get the list of contexts installed on the PortageLive server.
&lt;br/> If verbose is true, each context includes a short description.
&lt;br/> If verbose is false, only the name of each context is provided.
&lt;br/> In all cases, the results are provided in a semi-colon separated list.
&lt;br/> See the overall PortageLive_Service documentation for more details
         about contexts.
&lt;p>
         Throws a SoapFault exception in case of a protocol or connection error.
&lt;/p>
      </documentation>
      <input message="tns:getAllContextsRequest"/>
      <output message="tns:getTranslationResponse"/>
    </operation>
    <operation name="getTranslation">
      <documentation>
         Translate text using the default context.
&lt;br/> srcString must be the plain text to translate, in the source language.
&lt;br/> The result is the translation, one sentence per line.
&lt;p>
         Throws SoapFault in case of problems.
&lt;br/> If the faultcode is "PortageContext", the problem is with the context,
&lt;br/> if it is "PortageServer", the problem is with PortageLive server,
&lt;br/> otherwise some other problem occurred, normally described by the
         faultcode and explained by the faulstring.
&lt;/p>
      </documentation>
      <input message="tns:getTranslationRequest"/>
      <output message="tns:getTranslationResponse"/>
    </operation>
    <operation name="getTranslation2">
      <documentation>
         Translate text using the specified context.
&lt;br/> context must be a valid context identifier as returned by getAllContexts().
&lt;br/> srcString must be the plain text to translate, in the source language.
&lt;br/> The result is the translation, one sentence per line.
&lt;p>
         Throws SoapFault in case of problems.
&lt;br/> If the faultcode is "PortageContext", the problem is with the context,
&lt;br/> if it is "PortageServer", the problem is with PortageLive server,
&lt;br/> otherwise some other problem occurred, normally described by the
         faultcode and explained by the faulstring.
&lt;/p>
      </documentation>
      <input message="tns:getTranslation2Request"/>
      <output message="tns:getTranslationResponse"/>
    </operation>
    <operation name="getTranslationCE">
      <documentation>
         Translate text using the specified context, and calculate confidence scores
         on the translation.
&lt;br/> context must be a valid context identifier as returned by getAllContexts().
&lt;br/> srcString must be the plain text to translate, in the source language.
&lt;br/> The result is the translation, one sentence per line, with the
         confidence score preceeding each translation, separated by a tab character.
&lt;p>
         Throws SoapFault in case of problems.
&lt;br/> If the faultcode is "PortageContext", the problem is with the context
         (including the case where the context does not support confidence estimation),
&lt;br/> if it is "PortageServer", the problem is with PortageLive server,
&lt;br/> otherwise some other problem occurred, normally described by the
         faultcode and explained by the faulstring.
&lt;/p>
      </documentation>
      <input message="tns:getTranslation2Request"/>
      <output message="tns:getTranslationResponse"/>
    </operation>
    <operation name="translateTMXCE">
      <documentation>
         Submit a request to translate a TMX file using the specified context.
&lt;br/> context must be a valid context identifier as returned by getAllContexts().
&lt;br/> TMXContentsBase64 is the contents of the TMX file in base64 encoding.
&lt;br/> TMXFilename is the name of the TMX file.
&lt;br/> IF CETreshold is greater than 0, confidence estimation is used to
         filter out translations with confidence score below the threshold
         (valid values are between 0 and 1).
&lt;br/> If xtags is true, tags in the source sentences are transfered to the
         target sentences.
&lt;br/> Returns a token used to monitor the job.  The token can be used in one of
         two ways: it is a URL you can use to interactively monitor the job in a
         browser.  Or you can pass it as argument to translateTMXCE_Status().
&lt;p>
         Throws SoapFault in case of problems.
&lt;br/> If the faultcode is "PortageContext", the problem is with the context
         (including the case where the context does not support confidence
         estimation and CETreshold&gt;0),
&lt;br/> if it is "PortageServer", the problem is with PortageLive server,
&lt;br/> otherwise some other problem occurred, normally described by the
         faultcode and explained by the faulstring.
&lt;/p>
      </documentation>
      <input message="tns:translateXMLCERequest"/>
      <output message="tns:translationToken"/>
    </operation>
    <operation name="translateTMXCE_Status">
      <documentation>
         Get the status of a job submitted using translateTMXCE().
&lt;br/> token must be the token returned by a previous call to translateTMXCE().
&lt;br/> Returns a string containing a one digit code followed by a human readable
         description of the status.
&lt;br/> The return codes are: 0: job completed successfully, 1: job in progress, 2: job
         finished but failed, 3: something is wrong with the token.
&lt;br/> If the code is 0, the result string will be "0 Done: result_url", where
         result_url is the URL where you can fetch the translated TMX via HTTP.
&lt;br/> If the code is 1, the result string will include an indication of progress.
&lt;br/> If the code is 2, the result string will be "2 Failed: trace_url", where
         trace_url will let you see the error log for your job.
&lt;p>
         If you are going to poll a job status repeatedly, it is recommended you
         insert a 5 second delay between successive requests.
&lt;/p> &lt;p>
         Throws a SoapFault exception in case of a protocol or connection error.
&lt;/p>
      </documentation>
      <input message="tns:translationToken"/>
      <output message="tns:getTranslationResponse"/>
    </operation>
    <operation name="translateSDLXLIFFCE">
      <documentation>
         Submit a request to translate a SDLXLIFF file using the specified context.
&lt;br/> context must be a valid context identifier as returned by getAllContexts().
&lt;br/> SDLXLIFFContentsBase64 is the contents of the SDLXLIFF file in base64 encoding.
&lt;br/> SDLXLIFFFilename is the name of the SDLXLIFF file.
&lt;br/> IF CETreshold is greater than 0, confidence estimation is used to
         filter out translations with confidence score below the threshold
         (valid values are between 0 and 1).
&lt;br/> If xtags is true, tags in the source sentences are transfered to the
         target sentences.
&lt;br/> Returns a token used to monitor the job.  The token can be used in one of
         two ways: it is a URL you can use to interactively monitor the job in a
         browser.  Or you can pass it as argument to translateSDLXLIFFCE_Status().
&lt;p>
         Throws SoapFault in case of problems.
&lt;br/> If the faultcode is "PortageContext", the problem is with the context
         (including the case where the context does not support confidence
         estimation and CETreshold&gt;0),
&lt;br/> if it is "PortageServer", the problem is with PortageLive server,
&lt;br/> otherwise some other problem occurred, normally described by the
         faultcode and explained by the faulstring.
&lt;/p>
      </documentation>
      <input message="tns:translateXMLCERequest"/>
      <output message="tns:translationToken"/>
    </operation>
    <operation name="translateSDLXLIFFCE_Status">
      <documentation>
         Get the status of a job submitted using translateSDLXLIFFCE().
&lt;br/> token must be the token returned by a previous call to translateSDLXLIFFCE().
&lt;br/> Returns a string containing a one digit code followed by a human readable
         description of the status.
&lt;br/> The return codes are: 0: job completed successfully, 1: job in progress, 2: job
         finished but failed, 3: something is wrong with the token.
&lt;br/> If the code is 0, the result string will be "0 Done: result_url", where
         result_url is the URL where you can fetch the translated SDLXLIFF via HTTP.
&lt;br/> If the code is 1, the result string will include an indication of progress.
&lt;br/> If the code is 2, the result string will be "2 Failed: trace_url", where
         trace_url will let you see the error log for your job.
&lt;p>
         If you are going to poll a job status repeatedly, it is recommended you
         insert a 5 second delay between successive requests.
&lt;/p> &lt;p>
         Throws a SoapFault exception in case of a protocol or connection error.
&lt;/p>
      </documentation>
      <input message="tns:translationToken"/>
      <output message="tns:getTranslationResponse"/>
    </operation>
  </portType>
  <!-- ============================================================
                         B I N D I N G S
============================================================ -->
  <binding name="PortageLive_SoapHttpBinding" type="tns:PortageLive_Interface">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="primeModels">
      <soap:operation soapAction="primeModels"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="getAllContexts">
      <soap:operation soapAction="getAllContexts"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="getTranslation">
      <soap:operation soapAction="getTranslation"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="getTranslation2">
      <soap:operation soapAction="getTranslation2"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="getTranslationCE">
      <soap:operation soapAction="getTranslationCE"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="translateTMXCE">
      <soap:operation soapAction="translateTMXCE"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="translateTMXCE_Status">
      <soap:operation soapAction="translateTMXCE_Status"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="translateSDLXLIFFCE">
      <soap:operation soapAction="translateSDLXLIFFCE"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="translateSDLXLIFFCE_Status">
      <soap:operation soapAction="translateSDLXLIFFCE_Status"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
  </binding>
  <!-- ============================================================
                         S E R V I C E
============================================================ -->
  <service name="PortageLive_Service">
    <documentation>
         Definition of the PortageLive Service, providing an API to the PortageII
         software suite.
&lt;p>
         Typical usage: call getAllContexts() to obtain the list of trained
         systems available on the server, and then call getTranslation2() for each
         unit of text you need to translate.
&lt;/p>&lt;p>
         The context embeds a number of parameters that are configured on the
         server when the system is trained, and not directly accessible to the
         client: source and target language, training data and all training
         options, etc.  It is recommended that meaningful names be used when
         installing systems ("contexts") on the server, e.g., indicating at
         least the domain and the language direction.
&lt;/p>&lt;p>
         The client software can obtain the list of contexts by calling
         getAllContexts().  The non-verbose mode is meant for machine
         processing, listing just the contexts installed on the server, while
         the verbose mode adds human-readable details such as language
         direction and whether confidence estimation is available. (See
         getTranslationCE()).
&lt;/p>&lt;p>
         To translate text, call getTranslation2() with the desired
         context.  getTranslation() does the same thing, using the default
         context on the server.
         In both cases, srcString is the raw text to be translated.  It should
         be plain text, with no markup.  The text will be split in sentences
         and translated.  The result will contain one translated sentence per
         line.  (In a forthcoming version of this API, the paragraph structure
         of the input can optionally be preserved.)
&lt;/p>&lt;p>
         Time-out issues: because the SOAP API calls are made through the HTTP
         protocal, any time-out in the chain could cause the result to be lost:
         Apache server time-out, browser or other client time-out, etc.  If
         you're submitting large amounts of text for translation that might
         exceed typical time-outs, you should split the input into smaller
         chunks, e.g., paragraphs, and make several calls to getTranslation2().
         Asynchronous methods exist for translating TMX and XLIFF files, but
         not yet for plain text.
&lt;/p>&lt;p>
         See individual function documentation for further details.
&lt;/p>
    </documentation>
    <port name="PortageLive_Library" binding="tns:PortageLive_SoapHttpBinding">
      <soap:address location="http://__REPLACE_THIS_WITH_YOUR_IP__/PortageLiveAPI.php"/>
    </port>
  </service>
</definitions>
