<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="wsdl-viewer.xsl"?>
<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://__REPLACE_THIS_WITH_YOUR_IP__/PortageLiveAPI.wsdl" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://schemas.xmlsoap.org/wsdl/" name="PortageLiveService" targetNamespace="http://__REPLACE_THIS_WITH_YOUR_IP__/PortageLiveAPI.wsdl">
  <!-- Understanding WSDL: http://msdn.microsoft.com/en-us/library/ms996486.aspx -->
  <!-- http://www.w3.org/TR/wsdl20 -->
  <documentation>
    file: PortageLiveAPI.wsdl
    brief: Definition of the API to the Portage SMT software suite.
    author: Samuel Larkin, Patrick Paul and Eric Joanis

  Traitement multilingue de textes / Multilingual Text Processing
  Technologies de l'information et des communications /
    Information and Communications Technologies
  Conseil national de recherches Canada / National Research Council Canada
  Copyright 2009 - 2015, Sa Majest√© la Reine du Chef du Canada /
  Copyright 2009 - 2015, Her Majesty in Right of Canada

  ChangeLog
  </documentation>
  <!-- ============================================================
                         M E S S A G E S
============================================================ -->
  <message name="primeModelsRequest">
    <part name="context" type="xsd:string"/>
    <part name="PrimeMode" type="xsd:string"/>
  </message>
  <message name="primeModelsResponse">
    <part name="status" type="xsd:boolean"/>
  </message>

  <message name="getAllContextsRequest">
    <part name="verbose" type="xsd:boolean"/>
  </message>
  <message name="getAllContextsResponse">
    <part name="contexts" type="xsd:string"/>
  </message>

  <message name="translateRequest">
    <part name="srcString" type="xsd:string"/>
    <part name="context" type="xsd:string"/>
    <part name="newline" type="xsd:string"/>
    <part name="xtags" type="xsd:boolean"/>
    <part name="useCE" type="xsd:boolean"/>
  </message>
  <message name="translateResponse">
    <part name="Result" type="xsd:string"/>
  </message>

  <message name="translateFileRequest">
    <part name="ContentsBase64" type="xsd:string"/>
    <part name="Filename" type="xsd:string"/>
    <part name="context" type="xsd:string"/>
    <part name="useCE" type="xsd:boolean"/>
    <part name="xtags" type="xsd:boolean"/>
  </message>
  <message name="translateXmlFileRequest">
    <part name="ContentsBase64" type="xsd:string"/>
    <part name="Filename" type="xsd:string"/>
    <part name="context" type="xsd:string"/>
    <part name="useCE" type="xsd:boolean"/>
    <part name="CETreshold" type="xsd:decimal"/>
    <part name="xtags" type="xsd:boolean"/>
  </message>
  <message name="translationToken">
    <part name="token" type="xsd:string"/>
  </message>
  <message name="translateFileStatusResponse">
    <part name="token" type="xsd:string"/>
  </message>

  <message name="updateFixedTermRequest">
    <part name="ContentsBase64" type="xsd:base64Binary"/>
    <part name="Filename" type="xsd:string"/>
    <part name="encoding" type="xsd:string"/>
    <part name="context" type="xsd:string"/>
    <part name="sourceColumnIndex" type="xsd:decimal"/>
    <part name="sourceLanguage" type="xsd:string"/>
    <part name="targetLanguage" type="xsd:string"/>
  </message>
  <message name="updateFixedTermResponse">
    <part name="status" type="xsd:boolean"/>
  </message>

  <message name="getFixedTermRequest">
    <part name="context" type="xsd:string"/>
  </message>
  <message name="getFixedTermResponse">
    <part name="ContentsBase64" type="xsd:base64Binary"/>
  </message>

  <message name="removeFixedTermRequest">
    <part name="context" type="xsd:string"/>
  </message>
  <message name="removeFixedTermResponse">
    <part name="status" type="xsd:boolean"/>
  </message>

  <message name="getVersionRequest">
  </message>
  <message name="getVersionResponse">
    <part name="version" type="xsd:string"/>
  </message>
  <!-- ============================================================
                      P O R T   T Y P E S
============================================================ -->
  <portType name="PortageLive_Interface">
    <!--
    <wsdl:documentation>
       Portage's translation web API.
    </wsdl:documentation>
    -->
    <operation name="primeModels">
      <documentation>
        For a given context, load its models in memory according to PrimeMode.

        Legal value for PrimeMode are "partial" and "full".
        Recommended use: call this method with "partial" before the first time
        you use a given context, or after it's been left unused for a long
        time.  This will normally result in faster response times afterwards.

        Priming is accomplished by calling the prime.sh script installed with
        the context on the server.  The default prime.sh uses PrimeMode to
        partially (partial) or fully (full) load the models in memory.  The
        actual behaviour of this function can be customized on the server side
        if desired.

        Throws SoapFault in case of problems.
        Possible faultcode values:
         - PortageContext: the context is not valid.
         - PortagePrimeError: the prime.sh script failed.
         - PortageNoPrimeScript: the context exists but doesn't have a prime.sh script.
         - otherwise some other problem occurred, e.g., a protocol or connection
           error, normally described by the faultcode and explained by the faulstring.
      </documentation>
      <input message="tns:primeModelsRequest"/>
      <output message="tns:primeModelsResponse"/>
    </operation>

    <operation name="getAllContexts">
      <documentation>
        Get the list of contexts installed on the PortageLive server.

        If verbose is true, each context includes a short description.
        If verbose is false, only the name of each context is provided.
        In all cases, the results are provided in a semi-colon separated list.
        See the overall PortageLive_Service documentation for more details
        about contexts.

        Throws a SoapFault exception in case of a protocol or connection error.
      </documentation>
      <input message="tns:getAllContextsRequest"/>
      <output message="tns:getAllContextsResponse"/>
    </operation>

    <operation name="translate">
      <documentation>
        Translate text using the specified context.

        Arguments:
         - srcString is the sentence to translate.
         - context is the name of the system to use to translate the document, and
           must match one of the context names returned by getAllContexts().
         - newline indicates the interpretation that should be given to newline
           characters in srcString, and must be one of:
            - "w": newline characters are just whitespace and should be replaced by
              spaces; an empty line marks a paragraph boundary; sentence splitting
              is performed within each paragraph; the result will have one
              translated sentence per line with an empty line after each paragraph.
            - "p": newline characters mark paragraph boundaries; sentence splitting
              is performed within each paragraph for translation but the paragraphs
              are reconstructed in the output; the result will have one translated
              paragraph per line, matching srcString line by line.
            - "s": newline characters mark sentence boundaries; no sentence splitting
              will be performed; the result will have one translated sentence per
              line, matching srcString line by line.
         - xtags: if true, XMLish tags (typically representing markup in the
           original document, as some translation memory software does) will be
           transferred into the translation using our tag transfer module.

        Throws SoapFault in case of problems.
        Possible faultcode values:
         - PortageContext: the problem is with the context;
         - PortageBadArgs: newline is not one of {s, p, w};
         - PortageServer: the problem is with Portage server;
         - otherwise some other problem occurred, normally described by the
           faultcode and explained by the faulstring.
      </documentation>
      <input message="tns:translateRequest"/>
      <output message="tns:translateResponse"/>
    </operation>


    <operation name="translateTMX">
      <documentation>
        Submit a request to translate a TMX file using the specified context.

        Arguments:
         - context must be a valid context identifier as returned by getAllContexts().
         - TMXContentsBase64 is the contents of the TMX file in base64 encoding.
         - TMXFilename is the name of the TMX file.
         - useCE enables generating CE scores which in turn enables CETreshold.
         - If CETreshold is greater than 0, confidence estimation is used to
           filter out translations with confidence score below the threshold
           (valid values are between 0 and 1).
           CETreshold must be set to 0 if useCE is false.
         - If xtags is true, tags in the source sentences are transfered to the
           target sentences.

        Each translation unit in the TMX file is treated as one sentence.

        Returns a token used to monitor the job.  The token can be used in one of
        two ways: it is a URL you can use to interactively monitor the job in a
        browser.  Or you can pass it as argument to translateFileStatus().

        Throws SoapFault in case of problems.
        If the faultcode is "PortageContext", the problem is with the context
        (including the case where the context does not support confidence
        estimation and CETreshold&gt;0),
        if it is "PortageServer", the problem is with PortageLive server,
        otherwise some other problem occurred, normally described by the
        faultcode and explained by the faulstring.
      </documentation>
      <input message="tns:translateXmlFileRequest"/>
      <output message="tns:translationToken"/>
    </operation>
    <operation name="translateSDLXLIFF">
      <documentation>
        Does the same thing as translateTMX(), but for an SDLXLIFF file.
        See the documentation of translateTMX() for details.
      </documentation>
      <input message="tns:translateXmlFileRequest"/>
      <output message="tns:translationToken"/>
    </operation>
    <operation name="translatePlainText">
      <documentation>
        Submit a request to translate a plain text file using the specified context.

        Arguments:
         - context must be a valid context identifier as returned by getAllContexts().
         - TMXContentsBase64 is the contents of the TMX file in base64 encoding.
         - TMXFilename is the name of the TMX file.
         - useCE enables generating CE scores.
         - If xtags is true, tags in the source sentences are transfered to the
           target sentences.

        Newline characters are interpreted as paragraph ends, like when you
        specify newline=p to translate().

        Returns a token used to monitor the job.  The token can be used in one of
        two ways: it is a URL you can use to interactively monitor the job in a
        browser.  Or you can pass it as argument to translateFileStatus().

        Throws SoapFault in case of problems.
        If the faultcode is "PortageContext", the problem is with the context
        (including the case where the context does not support confidence
        estimation and CETreshold&gt;0),
        if it is "PortageServer", the problem is with PortageLive server,
        otherwise some other problem occurred, normally described by the
        faultcode and explained by the faulstring.
      </documentation>
      <input message="tns:translateFileRequest"/>
      <output message="tns:translationToken"/>
    </operation>


    <operation name="translateFileStatus">
      <documentation>
        Get the status of a job submitted using translateTMX().

        token must be the token returned by a previous call to translateTMX().

        Returns a string containing a one digit code followed by a human readable
        description of the status.
        Valid codes are:
         - 0: job completed successfully,
         - 1: job in progress,
         - 2: job finished but failed,
         - 3: something is wrong with the token.

        If the code is 0, the result string will be "0 Done: result_url", where
        result_url is the URL where you can fetch the translated TMX via HTTP.
        If the code is 1, the result string will include an indication of progress.
        If the code is 2, the result string will be "2 Failed: trace_url", where
        trace_url will let you see the error log for your job.

        If you are going to poll a job status repeatedly, it is recommended you
        insert a 5 second delay between successive requests.

        Throws a SoapFault exception in case of a protocol or connection error.
      </documentation>
      <input message="tns:translationToken"/>
      <output message="tns:translateFileStatusResponse"/>
    </operation>


    <operation name="updateFixedTerms">
      <documentation>
         Given a translation system that is instrumented to process fixed
         terms, update its list of fixed terms.

         - ContentsBase64 is the contents of the fixed term file in base64 encoding.
         - Filename is the fixed term file name.
         - encoding is the fixed term file's encoding and can be either UTF-8 or CP-1252.
         - context must be a valid context identifier as returned by getAllContexts().
         - sourceColumnIndex is the 1-based index of the source column. {1 or 2}
         - sourceLanguage is the source term's language code {en, fr, es, da}
         - targetLanguage is the target term's language code {en, fr, es, da}

         The Fixed Term file format is comprised of a header and a body.
         The header is a single line in the following format:
         sourceLanguage TAB targetLanguage
         The body is several lines in the following format:
         sourceTerm TAB targetTerm
         Above, " TAB " means an actual tab character.

         Important considerations about the fixed term list:
         - No morphological transformation will be applied.  You have to
           provide all inflected forms if any.
         - A given term can only have one translation.
         - There is no disambiguation of terms done.  It is up to the user to
           provide unambiguous terms.
         - Fixed term replacement is done after lowercasing.  This means that
           it is not possible to distinguish between "Rice" and "rice", nor
           between "US" and "us".

         This function returns true on success, or raises an exception otherwise.

         Throws a SoapFault exception in case of a protocol or connection error.
      </documentation>
      <input message="tns:updateFixedTermRequest"/>
      <output message="tns:updateFixedTermResponse"/>
    </operation>
    <operation name="getFixedTerms">
      <documentation>
         Given a translation system that is instrumented to process fixed
         terms, retrive its list of fixed terms.

         - context must be a valid context identifier as returned by getAllContexts().

         Returns the UTF-8 fixed term list base64 encoded in the format
         described by updateFixedTerms.

         Throws a SoapFault exception in case of a protocol or connection error.
      </documentation>
      <input message="tns:getFixedTermRequest"/>
      <output message="tns:getFixedTermResponse"/>
    </operation>
    <operation name="removeFixedTerms">
      <documentation>
         Given a translation system that is instrumented to process fixed
         terms, delete its list of fixed terms.

         - context must be a valid context identifier as returned by getAllContexts().

         This function returns true on success, or raises an exception otherwise.

         Throws a SoapFault exception in case of a protocol or connection error.
      </documentation>
      <input message="tns:removeFixedTermRequest"/>
      <output message="tns:removeFixedTermResponse"/>
    </operation>

    <operation name="getVersion">
      <documentation>
         Returns the current API's version.
         Throws a SoapFault exception in case of a protocol or connection error.
      </documentation>
      <input message="tns:getVersionRequest"/>
      <output message="tns:getVersionResponse"/>
    </operation>
  </portType>
  <!-- ============================================================
                         B I N D I N G S
============================================================ -->
  <binding name="PortageLive_SoapHttpBinding" type="tns:PortageLive_Interface">
    <soap:binding style="rpc" transport="http://schemas.xmlsoap.org/soap/http"/>
    <operation name="primeModels">
      <soap:operation soapAction="primeModels"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="getAllContexts">
      <soap:operation soapAction="getAllContexts"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="translate">
      <soap:operation soapAction="translate"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>


    <operation name="translateFileStatus">
      <soap:operation soapAction="translateFileStatus"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>


    <operation name="translateTMX">
      <soap:operation soapAction="translateTMX"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="translateSDLXLIFF">
      <soap:operation soapAction="translateSDLXLIFF"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="translatePlainText">
      <soap:operation soapAction="translatePlainText"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>

    <operation name="updateFixedTerms">
      <soap:operation soapAction="updateFixedTerms"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="http://__REPLACE_THIS_WITH_YOUR_IP__/PortageLiveAPI.wsdl" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="getFixedTerms">
      <soap:operation soapAction="getFixedTerms"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
    <operation name="removeFixedTerms">
      <soap:operation soapAction="removeFixedTerms"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>

    <operation name="getVersion">
      <soap:operation soapAction="getVersion"/>
      <input>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </input>
      <output>
        <soap:body encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" namespace="urn:cnrc-nrc:portageliveservice" use="encoded"/>
      </output>
    </operation>
  </binding>
  <!-- ============================================================
                         S E R V I C E
============================================================ -->
  <service name="PortageLive_Service">
    <documentation>
      Definition of the PortageLive Service, providing an API to the PortageII
      software suite.

      Typical usage: call getAllContexts() to obtain the list of trained
      systems available on the server, and then call translate() for each
      unit of text you need to translate.

      The context embeds a number of parameters that are configured on the
      server when the system is trained, and not directly accessible to the
      client: source and target language, training data and all training
      options, etc.  It is recommended that meaningful names be used when
      installing systems ("contexts") on the server, e.g., indicating at
      least the domain and the language direction.

      The client software can obtain the list of contexts by calling
      getAllContexts().  The non-verbose mode is meant for machine
      processing, listing just the contexts installed on the server, while
      the verbose mode adds human-readable details such as language
      direction and whether confidence estimation is available. (See
      translateCE()).

      To translate text, call translate() with the desired context.
      srcString is used for the raw text to be translated.  It should
      be plain text, optionally with markup.  The text will be split in
      sentences and translated.  The result will respect the paragraph
      structure specified by the newline parameter.

      See individual function documentation for further details.

      &lt;b>Simple usage example&lt;/b>

      You are about to submit a series of requests to a particular system, for
      text where newline characters delimit paragraphs.  The context name
      is provided to you by the server administrator.
      Before the series of requests starts:
      primeModels(context, "partial");
      loop: translate(srcText, context, "p", false);

      &lt;b>Constraints&lt;/b>
      &lt;b>Time-out issues&lt;/b>: because the SOAP API calls are made through the HTTP
      protocol, any time-out in the chain could cause the result to be lost:
      Apache server time-out, browser or other client time-out, etc.  If
      you're submitting large amounts of text for translation that might
      exceed typical time-outs, you should split the input into smaller
      chunks, e.g., paragraphs, and make several calls to translate().
      Asynchronous methods exist for translating TMX and XLIFF files, but
      not yet for plain text.

      &lt;b>Performance issues&lt;/b>: typical systems run on the order of one sentence
      per second per CPU.  Adequate server capacity should be secured for the
      volume of translation required.
      Some parameters can be tweaked at training time to speed up translation,
      in a trade-off with translation quality.

    </documentation>
    <port name="PortageLive_Library" binding="tns:PortageLive_SoapHttpBinding">
      <soap:address location="http://__REPLACE_THIS_WITH_YOUR_IP__/PortageLiveAPI.php"/>
    </port>
  </service>
</definitions>
