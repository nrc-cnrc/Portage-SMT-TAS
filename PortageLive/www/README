Traitement multilingue de textes / Multilingual Text Processing
Technologies de l'information et des communications /
   Information and Communications Technologies
Conseil national de recherches Canada / National Research Council Canada
Copyright 2004-2016, Sa Majeste la Reine du Chef du Canada
Copyright 2004-2016, Her Majesty in Right of Canada

Distributed under specific licensing terms.  Please refer to your signed
license agreement for details.


                                PortageLive
                            Web service software

This directory includes scripts that can help you reproduce the structure we
use to package the web software for PortageLive virtual appliances.  Detailed
instructions are in the PortageLive Manual part of the PortageII User Manual.

In this directory:

User Configuration
==================

Adjust the CGI scripts to your system's configuration: Before you create the
file layout, edit cgi/plive.cgi and set the variables in section "USER
CONFIGURATION" to appropriate values. This step is important, do not skip it!

Static or dynamic IP?
=====================

This directory can prepare the file layout in two different ways.

If your PortageLive server has a fixed IP address, provide the -ip
FIXED_IP_ADDRESS option to ./prep-file-layout.sh to hardcode the IP address
into the WSDL file.

If your PortageLive server might change IP address at each boot (e.g., if it's
using a DHCP server with dynamic addresses, or if it's a VM you might clone,
then leave out the -ip option and install the subsequent-boot-script found in
../va/ so that it gets run each time your server boots up.

Prepare the web file layout
===========================

Now run ./prep-file-layout.sh to create the rpm.build.root hierarchy.  The
files placed in that directory reproduce the location where files are to be
installed on the translation server, as is normally done with RPMs.

Dynamic IP:
   ./prep-file-layout.sh -dynamic-ip
Static IP:
   ./prep-file-layout.sh -ip 10.15.20.25

Then, either copy the files manually to your translation server, if you have
just one physical server, or build the RPM by running ../scripts/make-rpm.sh if
you are using virtual appliances.

Installation
============

To copy the files to your PortageLive translation server, you can use rsync:
   rsync -arzv rpm.build.root/* root@<host>:/
or, locally:
   rsync -arv rpm.build.root/* /

Verifying Symlinks
==================

After making the copy, please make sure the following symlinks were correctly
re-created:
   /var/www/html/secure/images -> ../images
   /var/www/html/secure/favicon.ico -> ../favicon.ico
If not, fix them manually:
   cd /var/www/html/secure
   ln -s ../images .
   ln -s ../favicon.ico .

Permissions
===========

Make sure the apache process can access everything it needs to run PortageII:
it should have read access to all of /var/www/html, execute access to all
folders and cgi scripts therein, and write access to /var/www/html/plive.

The installation instructions provided above should have accomplished that
automatically, but if not, this will fix things:
   chmod -R o+rX /var/www/html
   chmod o+w /var/www/html/plive

Next steps
==========

The directory ../va/ contains instructions on configuring your PortageLive
server.

The full PortageLive installation procedure is found the in PortageLive Manual
section of the PortageII User Manual.
(doc/user-manual.html / PortageLive Manual).

Notes
=====

The scripts work for us, but rely on details of how the OS and Apache are
installed, among other things.  You should expect to have to adjust the
procedure for your own environment.

If you are planing to use ssl/https, each place in the wsdl file that has
http://__REPLACE_THIS_WITH_YOUR_IP__/ needs to have https instead of http.
./prep-file-layout.sh does this automatically while copying the file to the
rpm.build.root layout, under html/secure/ instead of just html/.

When updating a PortageLive server from a previous version, you have to remove
compiled WSDL files, e.g., /tmp/wsdl-b86d6725c76b46209ae173d4f02dd224, cached
by Apache:
   rm /tmp/wsdl-*
Otherwise, you will get errors with Apache thinking you're using the previously
installed version of the SOAP API.
